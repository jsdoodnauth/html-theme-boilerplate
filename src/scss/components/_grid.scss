.container {
  margin: 0 auto;
  max-width: 1280px;
  width: 90%;
}
@media #{$medium-and-up} {
  .container {
    width: 85%;
  }
}
@media #{$large-and-up} {
  .container {
    width: 70%;
  }
}
.col .row {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}

.section {
  padding-top: 1rem;
  padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

.hero-section {
  margin: 1rem auto;
  display: flex;
  justify-content: center;
  position: relative;

  .hero-image {
    img {
      border-radius: $round;
    }
  }

  .hero-content {
    text-align: left;
    border-radius: $round;
    padding: 2.5rem 2rem;
    color: color("blue-grey", "darken-4");
    position: absolute;
    right: 10%;
    bottom: 10%;
    max-width: 30rem;
    background-color: color("shades", "white");

    .title {
      margin: 0;
    }
  }
}

.feature-section {
  display: flex;
  flex-wrap: wrap;

  .feature-card {
    flex: 0 0 25%;

    &.feature-avatar-card {
      flex: 0 0 200px;
    }

    .feature-item {
      display: flex;
      flex-direction: column;
      overflow: hidden;
      width: calc(100% - 20px);
      min-height: 370px;
      margin: 1rem 0 1rem 0.5rem;
      padding: 2.25rem 2rem 2rem;
      background-color: #EAEDF6;
      background-image: linear-gradient(20deg, #E2E5ED, #F1F4F4);
      border-radius: $round;

      h2, h3, h4 {
        margin: 0.5rem 0 0.5rem;
      }

      p {
        color: color("grey", "darken-2");
        margin-top: 0.5rem;
      }
    }

    .feature-avatar {
      width: 3rem;
      height: 3rem;
      border-radius: $round;
      text-align: center;
      margin: 0 auto 0.25rem;
    }

    .feature-btn {
      align-self: flex-end;
      margin: auto auto 0;
      border-radius: $round;
      padding: 0 3rem;
    }
  }

  &.feature-outline {
    .feature-item {
      border: 1px solid color("grey", "lighten-1");
      background-color: transparent;
      background-image: none;
    }
    
    .btn {
      background-color: $primary-color;
    }
  }
}

.card-section {
  padding: 1rem;
  margin: 1rem auto;
  border-radius: $round;

  .title {
    font-weight: 700;
    font-size: 2.5rem;
    margin-bottom: 0;
  }

  .collection {
    margin: 0 auto;
  }
}

.dark.card-section {
  background-color: $primary-color;
  .title {
    color: color("shades", "white");
  }

  .feature-section.feature-outline {
    .feature-item {
      border: 1px solid $primary-color-lighter; 
      background-color: transparent;
      background-image: none;
      color: color("shades", "white");

      p {
        color: color("grey", "lighten-1");
      }

      .btn {
        background-color: color("shades", "white");
        color: $primary-color;
      }
    }
  }
}

// Mixins to eliminate code repitition
@mixin reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}
@mixin grid-classes($size, $i, $perc) {
  &.offset-#{$size}#{$i} {
    margin-left: $perc;
  }
  &.pull-#{$size}#{$i} {
    right: $perc;
  }
  &.push-#{$size}#{$i} {
    left: $perc;
  }
}


.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    float: left;
    box-sizing: border-box;
    padding: 0 $gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.s#{$i} {
        width: $perc;
        @include reset-offset;
      }
      $i: $i + 1;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      @include grid-classes("s", $i, $perc);
      $i: $i + 1;
    }

    @media #{$medium-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.m#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("m", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.l#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("l", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$extra-large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.xl#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("xl", $i, $perc);
        $i: $i + 1;
      }
    }
  }
}
